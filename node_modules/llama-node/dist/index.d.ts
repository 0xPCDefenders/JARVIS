import { I as ILLM, C as CompletionCallback } from './llm.d-120996aa.js';

declare class LLM<Instance = any, LoadConfig = any, LLMInferenceArguments = any, LLMEmbeddingArguments = any, TokenizeArguments = any> {
    llm: ILLM<Instance, LoadConfig, LLMInferenceArguments, LLMEmbeddingArguments, TokenizeArguments>;
    constructor(llm: new () => ILLM<Instance, LoadConfig, LLMInferenceArguments, LLMEmbeddingArguments, TokenizeArguments>);
    load(config: LoadConfig): void;
    createCompletion(params: LLMInferenceArguments, callback: CompletionCallback): Promise<boolean>;
    getEmbedding(params: LLMEmbeddingArguments): Promise<number[]>;
    getDefaultEmbeddings(text: string): Promise<number[]>;
    tokenize(content: TokenizeArguments): Promise<number[]>;
}

export { LLM, LLM as LLama };
